!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
EXIT_BAD_PARAM	judge.h	/^    const int EXIT_BAD_PARAM        = 3;$/;"	v
EXIT_COMPARE	judge.h	/^    const int EXIT_COMPARE          = 27;$/;"	v
EXIT_COMPARE_SPJ	judge.h	/^    const int EXIT_COMPARE_SPJ      = 30;$/;"	v
EXIT_COMPARE_SPJ_FORK	judge.h	/^    const int EXIT_COMPARE_SPJ_FORK = 31;$/;"	v
EXIT_COMPILE	judge.h	/^    const int EXIT_COMPILE          = 6;$/;"	v
EXIT_JUDGE	judge.h	/^    const int EXIT_JUDGE            = 21;$/;"	v
EXIT_OK	judge.h	/^    const int EXIT_OK               = 0;$/;"	v
EXIT_PRE_JUDGE	judge.h	/^    const int EXIT_PRE_JUDGE        = 9;$/;"	v
EXIT_PRE_JUDGE_EXECLP	judge.h	/^    const int EXIT_PRE_JUDGE_EXECLP = 11;$/;"	v
EXIT_PRE_JUDGE_PTRACE	judge.h	/^    const int EXIT_PRE_JUDGE_PTRACE = 10;$/;"	v
EXIT_SET_LIMIT	judge.h	/^    const int EXIT_SET_LIMIT        = 15;$/;"	v
EXIT_SET_SECURITY	judge.h	/^    const int EXIT_SET_SECURITY     = 17;$/;"	v
EXIT_UNKNOWN	judge.h	/^    const int EXIT_UNKNOWN          = 127;$/;"	v
EXIT_UNPRIVILEGED	judge.h	/^    const int EXIT_UNPRIVILEGED     = 1;$/;"	v
FM_LOG_DEBUG	logger.h	56;"	d
FM_LOG_FATAL	logger.h	61;"	d
FM_LOG_MOITOR	logger.h	59;"	d
FM_LOG_NOTICE	logger.h	58;"	d
FM_LOG_TRACE	logger.h	57;"	d
FM_LOG_WARNING	logger.h	60;"	d
GCC_COMPILE_ERROR	judge.h	/^    const int GCC_COMPILE_ERROR = 1;$/;"	v
GIGA	judge.h	/^    const int GIGA              = KILO * MEGA;  \/\/ 1G$/;"	v
KILO	judge.h	/^    const int KILO              = 1024;         \/\/ 1K$/;"	v
LANG_C	judge.h	/^    const int LANG_C            = 1;$/;"	v
LANG_CPP	judge.h	/^    const int LANG_CPP          = 2;$/;"	v
LANG_JAVA	judge.h	/^    const int LANG_JAVA         = 3;$/;"	v
LANG_PASCAL	judge.h	/^    const int LANG_PASCAL       = 4;$/;"	v
LANG_UNKNOWN	judge.h	/^    const int LANG_UNKNOWN      = 0;$/;"	v
LOG_DEBUG	logger.h	/^const int LOG_DEBUG         = 5;$/;"	v
LOG_FATAL	logger.h	/^const int LOG_FATAL         = 0;$/;"	v
LOG_LEVEL_NOTE	logger.h	/^static char LOG_LEVEL_NOTE[][10] = $/;"	v
LOG_MONITOR	logger.h	/^const int LOG_MONITOR       = 2;$/;"	v
LOG_NOTICE	logger.h	/^const int LOG_NOTICE        = 3;$/;"	v
LOG_TRACE	logger.h	/^const int LOG_TRACE         = 4;$/;"	v
LOG_WARNING	logger.h	/^const int LOG_WARNING       = 1;$/;"	v
MEGA	judge.h	/^    const int MEGA              = KILO * KILO;  \/\/ 1M$/;"	v
OJ_AC	judge.h	/^    const int OJ_AC             = 1; \/\/Accepted$/;"	v
OJ_CE	judge.h	/^    const int OJ_CE             = 7; \/\/Compilation Error$/;"	v
OJ_MLE	judge.h	/^    const int OJ_MLE            = 4; \/\/Memory Limit Exceeded$/;"	v
OJ_OLE	judge.h	/^    const int OJ_OLE            = 6; \/\/Output Limit Exceeded$/;"	v
OJ_PE	judge.h	/^    const int OJ_PE             = 2; \/\/Presentation Error$/;"	v
OJ_RE_ABRT	judge.h	/^    const int OJ_RE_ABRT        = 11;\/\/Abort$/;"	v
OJ_RE_BUS	judge.h	/^    const int OJ_RE_BUS         = 10;\/\/Bus Error$/;"	v
OJ_RE_FPE	judge.h	/^    const int OJ_RE_FPE         = 9; \/\/FPU Error$/;"	v
OJ_RE_SEGV	judge.h	/^    const int OJ_RE_SEGV        = 8; \/\/Segment Violation$/;"	v
OJ_RE_UNKNOWN	judge.h	/^    const int OJ_RE_UNKNOWN     = 12;\/\/Unknow$/;"	v
OJ_RF	judge.h	/^    const int OJ_RF             = 13;\/\/Restricted Function$/;"	v
OJ_SE	judge.h	/^    const int OJ_SE             = 14;\/\/System Error$/;"	v
OJ_TLE	judge.h	/^    const int OJ_TLE            = 3; \/\/Time Limit Exceeded$/;"	v
OJ_WA	judge.h	/^    const int OJ_WA             = 5; \/\/Wrong Answer$/;"	v
OJ_WAIT	judge.h	/^    const int OJ_WAIT           = 0; \/\/Queue$/;"	v
RF_C	rf_table.h	/^int RF_C[512] =$/;"	v
RF_CPP	rf_table.h	/^int RF_CPP[512] =$/;"	v
RF_JAVA	rf_table.h	/^int RF_JAVA[512] = $/;"	v
RF_PASCAL	rf_table.h	/^int RF_PASCAL[512] = $/;"	v
RF_table	rf_table.h	/^short RF_table[1024] = {0};$/;"	v
TARGET	makefile	/^TARGET=judge_c.exe$/;"	m
__JUDGE_H__	judge.h	2;"	d
__LOGGER__	logger.h	32;"	d
__RF_TABLE__	rf_table.h	2;"	d
buff_len	test/spj.cpp	5;"	d	file:
cmp	test/1001_rf.c	/^int cmp(void *a, void *b)$/;"	f
compile_time_limit	judge.h	/^    int compile_time_limit          = 5000;$/;"	v
data_dir	judge.h	/^    std::string data_dir;$/;"	v
data_file	judge.h	/^    std::string data_file;$/;"	v
data_filename	judge.h	/^    const std::string data_filename = "data.txt"; $/;"	v
dump_to_log	judge.h	/^    void dump_to_log()$/;"	f	namespace:problem
exec_file	judge.h	/^    std::string exec_file;$/;"	v
id	judge.h	/^    int id                  = 0;$/;"	v
in_syscall	judge.h	/^static bool in_syscall = true;$/;"	v
init_RF_table	rf_table.h	/^void init_RF_table(int lang)$/;"	f
input_file	judge.h	/^    std::string input_file;$/;"	v
int_ignored	judge_c.cpp	/^int int_ignored; \/\/用来应付"warn_if_unused"的返回值, GCC真麻烦..$/;"	v
io_redirect	judge.h	/^void io_redirect()$/;"	f
is_space_char	judge.h	499;"	d
is_valid_syscall	judge.h	/^bool is_valid_syscall(int lang, int syscall_id)$/;"	f
judge_conf	judge.h	/^namespace judge_conf$/;"	n
lang	judge.h	/^    int lang                = 0;$/;"	v
languages	judge.h	/^    const std::string languages[]    = {"unknown", "c", "c++", "java", "pascal"};$/;"	v
log_add_info	logger.h	/^void log_add_info(const char *info)$/;"	f
log_buffer	logger.h	/^static char log_buffer[log_buffer_size];$/;"	v
log_buffer_size	logger.h	67;"	d
log_close	logger.h	/^void log_close()$/;"	f
log_extra_info	logger.h	/^static char log_extra_info[log_buffer_size];$/;"	v
log_file	judge.h	/^    const std::string log_file       = "\/log\/judge.log";$/;"	v
log_filename	logger.h	/^static char *log_filename           = NULL;$/;"	v
log_fp	logger.h	/^static FILE *log_fp                 = NULL;$/;"	v
log_open	logger.h	/^int log_open(const char* filename)$/;"	f
log_opened	logger.h	/^static int  log_opened              = 0;$/;"	v
log_write	logger.h	/^static void log_write(int level, const char *file,$/;"	f
main	judge_c.cpp	/^int main(int argc, char *argv[])$/;"	f
main	test/1001.c	/^int main()$/;"	f
main	test/1001_ac.c	/^int main()$/;"	f
main	test/1001_ac.cpp	/^int main()$/;"	f
main	test/1001_ce.c	/^int main()$/;"	f
main	test/1001_pe.c	/^int main()$/;"	f
main	test/1001_rf.c	/^int main()$/;"	f
main	test/1001_tle.c	/^int main()$/;"	f
main	test/1001_wa.c	/^int main()$/;"	f
main	test/spj.cpp	/^int main(int argc, char *argv[])$/;"	f
malarm	judge.h	/^bool malarm(int which, int milliseconds)$/;"	f
memory_limit	judge.h	/^    int memory_limit        = 65536;$/;"	v
memory_usage	judge.h	/^    long memory_usage       = 0;$/;"	v
oj_compare_output	judge.h	/^int oj_compare_output(std::string file_std, std::string file_exec)$/;"	f
oj_compare_output_spj	judge.h	/^int oj_compare_output_spj($/;"	f
output_file_std	judge.h	/^    std::string output_file_std;$/;"	v
output_limit	judge.h	/^    int output_limit        = 8192;$/;"	v
output_result	judge.h	/^void output_result(int result, int memory_usage = 0, int time_usage = 0)$/;"	f
parse_arguments	judge.h	/^void parse_arguments(int argc, char *argv[])$/;"	f
problem	judge.h	/^namespace problem$/;"	n
result	judge.h	/^    int result              = 0; \/\/初始化为0比较好, 嗯$/;"	v
root_dir	judge.h	/^    std::string root_dir             = "\/home\/felix021\/woj";$/;"	v
set_limit	judge.h	/^void set_limit()$/;"	f
set_security_option	judge.h	/^void set_security_option()$/;"	f
sig_handler	test/1001_rf.c	/^void sig_handler(int signo)$/;"	f
source_file	judge.h	/^    std::string source_file;$/;"	v
spj	judge.h	/^    bool spj                = false;$/;"	v
spj_exe_file	judge.h	/^    std::string spj_exe_file;$/;"	v
spj_time_limit	judge.h	/^    int spj_time_limit              = 5000;$/;"	v
stack_size_limit	judge.h	/^    int stack_size_limit            = 4096;$/;"	v
status	judge.h	/^    int status;$/;"	v
stderr_file_compiler	judge.h	/^    std::string stderr_file_compiler;$/;"	v
stderr_file_executive	judge.h	/^    std::string stderr_file_executive;$/;"	v
stdout_file_compiler	judge.h	/^    std::string stdout_file_compiler;$/;"	v
stdout_file_executive	judge.h	/^    std::string stdout_file_executive;$/;"	v
stdout_file_spj	judge.h	/^    std::string stdout_file_spj;$/;"	v
strincmp	judge.h	/^int strincmp(const char *s1, const char *s2, int n)$/;"	f
temp_dir	judge.h	/^    const std::string temp_dir      = "\/temp";$/;"	v
temp_dir	judge.h	/^    std::string temp_dir;$/;"	v
time_limit	judge.h	/^    int time_limit          = 1000;$/;"	v
time_limit_addtion	judge.h	/^    int time_limit_addtion          = 314;$/;"	v
time_usage	judge.h	/^    int time_usage          = 0;$/;"	v
uid	judge.h	/^    std::string uid; \/\/会追加到日志中的唯一编号，可选$/;"	v
